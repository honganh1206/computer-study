
matrices:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 7a 2f 00 00    	push   0x2f7a(%rip)        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 7b 2f 00 00 	bnd jmp *0x2f7b(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop

Disassembly of section .plt.got:

0000000000001080 <__cxa_finalize@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 6d 2f 00 00 	bnd jmp *0x2f6d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001090 <free@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 15 2f 00 00 	bnd jmp *0x2f15(%rip)        # 3fb0 <free@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <puts@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 0d 2f 00 00 	bnd jmp *0x2f0d(%rip)        # 3fb8 <puts@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <printf@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 05 2f 00 00 	bnd jmp *0x2f05(%rip)        # 3fc0 <printf@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <malloc@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 fd 2e 00 00 	bnd jmp *0x2efd(%rip)        # 3fc8 <malloc@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <exit@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 f5 2e 00 00 	bnd jmp *0x2ef5(%rip)        # 3fd0 <exit@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010e0 <_start>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	31 ed                	xor    %ebp,%ebp
    10e6:	49 89 d1             	mov    %rdx,%r9
    10e9:	5e                   	pop    %rsi
    10ea:	48 89 e2             	mov    %rsp,%rdx
    10ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10f1:	50                   	push   %rax
    10f2:	54                   	push   %rsp
    10f3:	45 31 c0             	xor    %r8d,%r8d
    10f6:	31 c9                	xor    %ecx,%ecx
    10f8:	48 8d 3d 69 02 00 00 	lea    0x269(%rip),%rdi        # 1368 <main>
    10ff:	ff 15 d3 2e 00 00    	call   *0x2ed3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1105:	f4                   	hlt    
    1106:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    110d:	00 00 00 

0000000000001110 <deregister_tm_clones>:
    1110:	48 8d 3d f9 2e 00 00 	lea    0x2ef9(%rip),%rdi        # 4010 <__TMC_END__>
    1117:	48 8d 05 f2 2e 00 00 	lea    0x2ef2(%rip),%rax        # 4010 <__TMC_END__>
    111e:	48 39 f8             	cmp    %rdi,%rax
    1121:	74 15                	je     1138 <deregister_tm_clones+0x28>
    1123:	48 8b 05 b6 2e 00 00 	mov    0x2eb6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    112a:	48 85 c0             	test   %rax,%rax
    112d:	74 09                	je     1138 <deregister_tm_clones+0x28>
    112f:	ff e0                	jmp    *%rax
    1131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <register_tm_clones>:
    1140:	48 8d 3d c9 2e 00 00 	lea    0x2ec9(%rip),%rdi        # 4010 <__TMC_END__>
    1147:	48 8d 35 c2 2e 00 00 	lea    0x2ec2(%rip),%rsi        # 4010 <__TMC_END__>
    114e:	48 29 fe             	sub    %rdi,%rsi
    1151:	48 89 f0             	mov    %rsi,%rax
    1154:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1158:	48 c1 f8 03          	sar    $0x3,%rax
    115c:	48 01 c6             	add    %rax,%rsi
    115f:	48 d1 fe             	sar    %rsi
    1162:	74 14                	je     1178 <register_tm_clones+0x38>
    1164:	48 8b 05 85 2e 00 00 	mov    0x2e85(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    116b:	48 85 c0             	test   %rax,%rax
    116e:	74 08                	je     1178 <register_tm_clones+0x38>
    1170:	ff e0                	jmp    *%rax
    1172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <__do_global_dtors_aux>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	80 3d 85 2e 00 00 00 	cmpb   $0x0,0x2e85(%rip)        # 4010 <__TMC_END__>
    118b:	75 2b                	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	55                   	push   %rbp
    118e:	48 83 3d 62 2e 00 00 	cmpq   $0x0,0x2e62(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1195:	00 
    1196:	48 89 e5             	mov    %rsp,%rbp
    1199:	74 0c                	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	48 8b 3d 66 2e 00 00 	mov    0x2e66(%rip),%rdi        # 4008 <__dso_handle>
    11a2:	e8 d9 fe ff ff       	call   1080 <__cxa_finalize@plt>
    11a7:	e8 64 ff ff ff       	call   1110 <deregister_tm_clones>
    11ac:	c6 05 5d 2e 00 00 01 	movb   $0x1,0x2e5d(%rip)        # 4010 <__TMC_END__>
    11b3:	5d                   	pop    %rbp
    11b4:	c3                   	ret    
    11b5:	0f 1f 00             	nopl   (%rax)
    11b8:	c3                   	ret    
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <frame_dummy>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	e9 77 ff ff ff       	jmp    1140 <register_tm_clones>

00000000000011c9 <sumConMax>:
    11c9:	f3 0f 1e fa          	endbr64 
    11cd:	55                   	push   %rbp
    11ce:	48 89 e5             	mov    %rsp,%rbp
    11d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    11d5:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    11d8:	89 55 e0             	mov    %edx,-0x20(%rbp)
    11db:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    11e2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    11e9:	eb 3d                	jmp    1228 <sumConMax+0x5f>
    11eb:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    11f2:	eb 28                	jmp    121c <sumConMax+0x53>
    11f4:	8b 45 f4             	mov    -0xc(%rbp),%eax
    11f7:	0f af 45 e0          	imul   -0x20(%rbp),%eax
    11fb:	89 c2                	mov    %eax,%edx
    11fd:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1200:	01 d0                	add    %edx,%eax
    1202:	48 98                	cltq   
    1204:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    120b:	00 
    120c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1210:	48 01 d0             	add    %rdx,%rax
    1213:	8b 00                	mov    (%rax),%eax
    1215:	01 45 fc             	add    %eax,-0x4(%rbp)
    1218:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    121c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    121f:	3b 45 e0             	cmp    -0x20(%rbp),%eax
    1222:	7c d0                	jl     11f4 <sumConMax+0x2b>
    1224:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    1228:	8b 45 f4             	mov    -0xc(%rbp),%eax
    122b:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    122e:	7c bb                	jl     11eb <sumConMax+0x22>
    1230:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1233:	5d                   	pop    %rbp
    1234:	c3                   	ret    

0000000000001235 <sumNonconMax>:
    1235:	f3 0f 1e fa          	endbr64 
    1239:	55                   	push   %rbp
    123a:	48 89 e5             	mov    %rsp,%rbp
    123d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp) # copy address of *m from 1st param register
    1241:	89 75 e4             	mov    %esi,-0x1c(%rbp) # copy rows from 2nd param register
    1244:	89 55 e0             	mov    %edx,-0x20(%rbp) # copy cols from 3rd param register
    1247:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp) # copy 0 to total
    124e:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp) # copy 0 to i
    1255:	eb 41                	jmp    1298 <sumNonconMax+0x63>
    1257:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp) # copy 0 to j
    125e:	eb 2c                	jmp    128c <sumNonconMax+0x57>
    1260:	8b 45 f8             	mov    -0x8(%rbp),%eax # copy i to %eax
    1263:	48 98                	cltq   # convert i to 64-bit integer
    1265:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx # multiply i by 8 (int *) and place in %rdx
    126c:	00 
    126d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax # copy *m to %rax
    1271:	48 01 d0             	add    %rdx,%rax # put i*8 into %rax
    1274:	48 8b 10             	mov    (%rax),%rdx copy m[i] into %rdx
    1277:	8b 45 fc             	mov    -0x4(%rbp),%eax # copy j to %eax
    127a:	48 98                	cltq   # convert j to 64-bit integer
    127c:	48 c1 e0 02          	shl    $0x2,%rax # multiply j by 4 (int) and place into %rax
    1280:	48 01 d0             	add    %rdx,%rax # put j*4 + m[i] into %rax 
    1283:	8b 00                	mov    (%rax),%eax # copy m[i][j] to %eax
    1285:	01 45 f4             	add    %eax,-0xc(%rbp) # add m[i][j] to total
    1288:	83 45 fc 01          	addl   $0x1,-0x4(%rbp) # add 1 to j (j++)
    128c:	8b 45 fc             	mov    -0x4(%rbp),%eax # copy j to %eax
    128f:	3b 45 e0             	cmp    -0x20(%rbp),%eax # compare j with cols
    1292:	7c cc                	jl     1260 <sumNonconMax+0x2b> # if (j < cols) go to 1260
    1294:	83 45 f8 01          	addl   $0x1,-0x8(%rbp) add 1 to i (i++)
    1298:	8b 45 f8             	mov    -0x8(%rbp),%eax # copy i to %eax
    129b:	3b 45 e4             	cmp    -0x1c(%rbp),%eax # compare i with rows
    129e:	7c b7                	jl     1257 <sumNonconMax+0x22> if (i < rows) go to 1257
    12a0:	8b 45 f4             	mov    -0xc(%rbp),%eax # copy total to %eax
    12a3:	5d                   	pop    %rbp # restore %rbp
    12a4:	c3                   	ret    # return total

00000000000012a5 <initConMatrix>:
    12a5:	f3 0f 1e fa          	endbr64 
    12a9:	55                   	push   %rbp
    12aa:	48 89 e5             	mov    %rsp,%rbp
    12ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    12b1:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    12b8:	eb 41                	jmp    12fb <initConMatrix+0x56>
    12ba:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12c1:	eb 2e                	jmp    12f1 <initConMatrix+0x4c>
    12c3:	8b 45 f8             	mov    -0x8(%rbp),%eax
    12c6:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
    12cd:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12d0:	01 d0                	add    %edx,%eax
    12d2:	48 98                	cltq   
    12d4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    12db:	00 
    12dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12e0:	48 01 d0             	add    %rdx,%rax
    12e3:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    12e6:	8b 55 fc             	mov    -0x4(%rbp),%edx
    12e9:	01 ca                	add    %ecx,%edx
    12eb:	89 10                	mov    %edx,(%rax)
    12ed:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    12f1:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    12f5:	7e cc                	jle    12c3 <initConMatrix+0x1e>
    12f7:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    12fb:	83 7d f8 02          	cmpl   $0x2,-0x8(%rbp)
    12ff:	7e b9                	jle    12ba <initConMatrix+0x15>
    1301:	90                   	nop
    1302:	90                   	nop
    1303:	5d                   	pop    %rbp
    1304:	c3                   	ret    

0000000000001305 <initNonConMatrix>:
    1305:	f3 0f 1e fa          	endbr64 
    1309:	55                   	push   %rbp
    130a:	48 89 e5             	mov    %rsp,%rbp
    130d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1311:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1318:	eb 44                	jmp    135e <initNonConMatrix+0x59>
    131a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1321:	eb 31                	jmp    1354 <initNonConMatrix+0x4f>
    1323:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1326:	48 98                	cltq   
    1328:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    132f:	00 
    1330:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1334:	48 01 d0             	add    %rdx,%rax
    1337:	48 8b 10             	mov    (%rax),%rdx
    133a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    133d:	48 98                	cltq   
    133f:	48 c1 e0 02          	shl    $0x2,%rax
    1343:	48 01 d0             	add    %rdx,%rax
    1346:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    1349:	8b 55 fc             	mov    -0x4(%rbp),%edx
    134c:	01 ca                	add    %ecx,%edx
    134e:	89 10                	mov    %edx,(%rax)
    1350:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1354:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1358:	7e c9                	jle    1323 <initNonConMatrix+0x1e>
    135a:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    135e:	83 7d f8 02          	cmpl   $0x2,-0x8(%rbp)
    1362:	7e b6                	jle    131a <initNonConMatrix+0x15>
    1364:	90                   	nop
    1365:	90                   	nop
    1366:	5d                   	pop    %rbp
    1367:	c3                   	ret    

0000000000001368 <main>:
    1368:	f3 0f 1e fa          	endbr64 
    136c:	55                   	push   %rbp
    136d:	48 89 e5             	mov    %rsp,%rbp
    1370:	53                   	push   %rbx
    1371:	48 83 ec 28          	sub    $0x28,%rsp
    1375:	bf 30 00 00 00       	mov    $0x30,%edi
    137a:	e8 41 fd ff ff       	call   10c0 <malloc@plt>
    137f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1383:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    1388:	75 19                	jne    13a3 <main+0x3b>
    138a:	48 8d 05 73 0c 00 00 	lea    0xc73(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    1391:	48 89 c7             	mov    %rax,%rdi
    1394:	e8 07 fd ff ff       	call   10a0 <puts@plt>
    1399:	bf 01 00 00 00       	mov    $0x1,%edi
    139e:	e8 2d fd ff ff       	call   10d0 <exit@plt>
    13a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13a7:	48 89 c7             	mov    %rax,%rdi
    13aa:	e8 f6 fe ff ff       	call   12a5 <initConMatrix>
    13af:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    13b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13ba:	ba 04 00 00 00       	mov    $0x4,%edx
    13bf:	be 03 00 00 00       	mov    $0x3,%esi
    13c4:	48 89 c7             	mov    %rax,%rdi
    13c7:	e8 fd fd ff ff       	call   11c9 <sumConMax>
    13cc:	89 45 dc             	mov    %eax,-0x24(%rbp)
    13cf:	8b 45 dc             	mov    -0x24(%rbp),%eax
    13d2:	89 c6                	mov    %eax,%esi
    13d4:	48 8d 05 3f 0c 00 00 	lea    0xc3f(%rip),%rax        # 201a <_IO_stdin_used+0x1a>
    13db:	48 89 c7             	mov    %rax,%rdi
    13de:	b8 00 00 00 00       	mov    $0x0,%eax
    13e3:	e8 c8 fc ff ff       	call   10b0 <printf@plt>
    13e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    13ec:	48 89 c7             	mov    %rax,%rdi
    13ef:	e8 9c fc ff ff       	call   1090 <free@plt>
    13f4:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    13fb:	00 
    13fc:	bf 18 00 00 00       	mov    $0x18,%edi
    1401:	e8 ba fc ff ff       	call   10c0 <malloc@plt>
    1406:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    140a:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    1411:	eb 26                	jmp    1439 <main+0xd1>
    1413:	8b 45 d8             	mov    -0x28(%rbp),%eax
    1416:	48 98                	cltq   
    1418:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    141f:	00 
    1420:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1424:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    1428:	bf 10 00 00 00       	mov    $0x10,%edi
    142d:	e8 8e fc ff ff       	call   10c0 <malloc@plt>
    1432:	48 89 03             	mov    %rax,(%rbx)
    1435:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    1439:	83 7d d8 02          	cmpl   $0x2,-0x28(%rbp)
    143d:	7e d4                	jle    1413 <main+0xab>
    143f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1443:	48 89 c7             	mov    %rax,%rdi
    1446:	e8 ba fe ff ff       	call   1305 <initNonConMatrix>
    144b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    144f:	ba 04 00 00 00       	mov    $0x4,%edx
    1454:	be 03 00 00 00       	mov    $0x3,%esi
    1459:	48 89 c7             	mov    %rax,%rdi
    145c:	e8 d4 fd ff ff       	call   1235 <sumNonconMax>
    1461:	89 45 dc             	mov    %eax,-0x24(%rbp)
    1464:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1467:	89 c6                	mov    %eax,%esi
    1469:	48 8d 05 c4 0b 00 00 	lea    0xbc4(%rip),%rax        # 2034 <_IO_stdin_used+0x34>
    1470:	48 89 c7             	mov    %rax,%rdi
    1473:	b8 00 00 00 00       	mov    $0x0,%eax
    1478:	e8 33 fc ff ff       	call   10b0 <printf@plt>
    147d:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    1484:	eb 3e                	jmp    14c4 <main+0x15c>
    1486:	8b 45 d8             	mov    -0x28(%rbp),%eax
    1489:	48 98                	cltq   
    148b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1492:	00 
    1493:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1497:	48 01 d0             	add    %rdx,%rax
    149a:	48 8b 00             	mov    (%rax),%rax
    149d:	48 89 c7             	mov    %rax,%rdi
    14a0:	e8 eb fb ff ff       	call   1090 <free@plt>
    14a5:	8b 45 d8             	mov    -0x28(%rbp),%eax
    14a8:	48 98                	cltq   
    14aa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    14b1:	00 
    14b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    14b6:	48 01 d0             	add    %rdx,%rax
    14b9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    14c0:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    14c4:	83 7d d8 02          	cmpl   $0x2,-0x28(%rbp)
    14c8:	7e bc                	jle    1486 <main+0x11e>
    14ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    14ce:	48 89 c7             	mov    %rax,%rdi
    14d1:	e8 ba fb ff ff       	call   1090 <free@plt>
    14d6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    14dd:	00 
    14de:	b8 00 00 00 00       	mov    $0x0,%eax
    14e3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    14e7:	c9                   	leave  
    14e8:	c3                   	ret    

Disassembly of section .fini:

00000000000014ec <_fini>:
    14ec:	f3 0f 1e fa          	endbr64 
    14f0:	48 83 ec 08          	sub    $0x8,%rsp
    14f4:	48 83 c4 08          	add    $0x8,%rsp
    14f8:	c3                   	ret    
